---
########################
###  Base role vars  ###
########################

## Essential Environment Variables
SERVER_IP: 0.0.0.0  # IP address of your server.
DOMAIN_NAME: example.com  # Nginx server domain.
SSH_PORT: 22  # Port for SSH access.
NETWORK_INTERFACE: eth0  # Default network interface.
TIMEZONE: UTC  # Set your server's timezone.

#############################
###  Hardening role vars  ###
#############################
HARDENING_MISC_CONFIG_ENABLED: true  # Enable or disable miscellaneous hardning tasks.
HARDENING_MISC_YESCRYPT_HOST_FACTOR: 8  # Yescrypt factor for password hashing difficulty.
HARDENING_MISC_NODE_TYPE: server  # Specify the type of node (server or desktop).

HARDENING_AUTH_FAILLOCK_CONFIG_ENABLED: true  # Enable or disable faillock.
HARDENING_AUTH_FAILLOCK_MAX_ATTEMPTS: 3  # Maximum number of failed login attempts.
HARDENING_AUTH_FAILLOCK_UNLOCK_TIME: 600  # Time (in seconds) to unlock after exceeding attempts.

HARDENING_NETWORK_CONFIG_ENABLED: true  # Enable or disable network configuration.
HARDENING_NETWORK_DISABLE_IPV6: true  # Enable or disable ipv6 stack disabling.

HARDENING_DEBIAN_HARDENING_ENABLED: true  # Enable or disable Debian-based configuration.
HARDENING_REDHAT_HARDENING_ENABLED: true  # Enable or disable RedHat-based configuration.

HARDENING_SSH_CONFIG_ENABLED: true  # Enable or disable ssh configuration.
HARDENING_SSH_REMOVE_ROOT_PASSWORD_ENABLED: true  # Enable or disable root password removal.

HARDENING_FAIL2BAN_ENABLED: true  # Enable or disable fail2ban installation.
HARDENING_FAIL2BAN_BANTIME: 5m  # Duration for which IPs are banned.
HARDENING_FAIL2BAN_FINDTIME: 3m  # Time window to consider failed login attempts.
HARDENING_FAIL2BAN_MAXRETRY: 5  # Number of allowed failed login attempts before banning IP.

HARDENING_CHRONY_ENABLED: true  # Enable or disable chrony installation.

HARDENING_FIREWALL_ENABLED: true  # Enable or disable firewall hardening.
HARDENING_FIREWALL_BACKEND: firewalld  # Specify the backend for the firewall (options: ufw, firewalld, iptables).
HARDENING_FIREWALL_RESET: false  # Enable or disable resetting the firewall rules.
HARDENING_FIREWALL_OPEN_SSH_PORT: true  # Enable or disable opening the SSH port in the firewall.

#########################
###  Nginx role vars  ###
#########################

## Essential Environment Variables
NGINX_DOCKER_IMAGE_VERSION: latest  # Nginx Docker image version.

## Optional Environment Variables
# Determines the source of the SSL certificate.
# Options: 'auto' or 'manual'
# 'auto' - Obtain the certificate automatically through Let's Encrypt.
# 'manual' - Manually provide your SSL certificate and place it in the assets directory.
# In this case, specify the certificate file names using the variables:
# SSL_CERT_NAME for the certificate,
# SSL_KEY_NAME for the private key,
SSL_GEN: auto
SSL_EMAIL: test@example.com  # Email address used for SSL certificate registration or renewal notifications.
SSL_DH_NAME: dhparam.pem  # DH key filename placed in the assets/ directory.
SSL_DH_KEY_SIZE: 2048  # Key size for the DH parameters.

# !! THIS CONFIGURATION IS USED WHEN 'SSL_GEN' SET TO manual !!
SSL_CERT_NAME: cert.crt  # SSL certificate filename placed in the assets/ directory.
SSL_KEY_NAME: cert.key  # SSL Key filename placed in the assets/ directory.

############################
###  Authelia role vars  ###
############################

## Essential Environment Variables
AUTHELIA_DOCKER_IMAGE_VERSION: latest  # Authelia Docker image version.
AUTHELIA_USERNAME: user  # Authelia auth username.
AUTHELIA_PASSWORD: password  # Authelia auth password.
AUTHELIA_SESSION_DOMAIN: '{{ DOMAIN_NAME }}'  # The domain to protect.
AUTHELIA_JWT_SECRET: example_of_jwt_secret  # Secret key used to sign and verify the JWT.
AUTHELIA_SESSION_SECRET: example_of_session_secret  # Secret to encrypt the session data.
AUTHELIA_STORAGE_ENCRYTPTION_KEY: example_of_storage_encryption_key  # Ecryption key used to encrypt data in db.

## Optional Environment Variables
AUTHELIA_INSTALL: true  # Enable or disable Authelia installation.
AUTHELIA_THEME: dark  # light, dark, grey, auto.
AUTHELIA_LOG_FORMAT: text  # text, json.
AUTHELIA_TOTP_ISSUER: authelia.com  # Name displayed in the Authenticator application.
AUTHELIA_TOTP_ALGORITHM: sha1  # sha1, sha256, sha512.
AUTHELIA_TOTP_DIGITS: 6  # 6, 8.
AUTHELIA_TOTP_PERIOD: 30  # period in seconds a totp is valid for.
AUTHELIA_NTP_PROVIDER: time.cloudflare.com  # address of the NTP server.
AUTHELIA_NTP_DISABLE_FAILURE: 'false'  # true, false.

AUTHELIA_DOMAIN_LIST:  # List of domains to protect by Authelia.
  - '{{ DOMAIN_NAME }}'  # Main domain.
  - dns.{{ DOMAIN_NAME }}  # Use if DNS role is installed.

##############################
###  DNS Server role vars  ###
##############################

## Essential Environment Variables
PIHOLE_DOCKER_IMAGE_VERSION: latest  # Pi-hole Docker image version.
PIHOLE_TIMEZONE: Etc/UTC  # Timezone for the Pi-hole instance.
PIHOLE_ADMIN_PASSWORD: foobar123  # Password used to login in Pi-hole WebUI.

CLOUDFLARED_DOCKER_IMAGE_VERSION: latest  # Cloudflared Docker image version.
CLOUDFLARED_TIMEZONE: Etc/UTC  # Timezone for the Cloudflared service.
CLOUDFLARED_TUNNEL_DNS_UPSTREAM: https://1.1.1.1/dns-query,https://1.0.0.1/dns-query  # Upstream DoH servers for Cloudflared tunnel.

## Optional Environment Variables
DNS_SERVER_INSTALL: true  # Enable or disable DNS Server installation.
PIHOLE_DNSSEC: true  # Enable or disable DNSSEC support.
PIHOLE_QUERY_LOGGING: 'true'  # Toggle query logging.
PIHOLE_CACHE_SIZE: 10000  # DNS cache size.
PIHOLE_WEBUI_BOXED_LAYOUT: boxed  # Web interface layout.
PIHOLE_WEBUI_THEME: default-dark  # Web interface theme.
PIHOLE_DNS_RECORDS:  # List of custom DNS records.
  - 10.8.0.2 example.com
  - 10.8.0.3 link1.example.com
  - 10.8.0.4 link2.example.com

#############################
###  Wiregurad role vars  ###
#############################

## Essential Environment Variables
WG_DOCKER_IMAGE_VERSION: latest  # WireGuard Docker image version.
WG_LANG: en  # WebUI language.
WG_UI_PASSWORD: foobar123  # WebUI Password.
WG_MTU: 1420  # MTU size.

## Optional Environment Variables
WG_PORT: 51820  # The public UDP port of VPN server.
WG_DEFAULT_ADDRESS: 10.8.0.x  # Clients IP address range.
WG_DEFAULT_DNS: 1.1.1.1, 1.0.0.1  # DNS servers for clients (used if DNS role is not installed).
WG_UI_TRAFFIC_STATS: true  # Enable detailed RX / TX client stats in WebUI.
WG_UI_CHART_TYPE: 0 # Type of chart for displaying statistics; 0 Charts disabled, 1 # Line chart, 2 # Area chart, 3  # Bar chart.

## Advanced Environment Variables
## Define extra ports to expose (optional).
## Use the format: - host_port:container_port
# WG_ADDITIONAL_PORTS:
#   - 1234:1234

## Custom firewall rules to apply before the WireGuard interface is brought up (opional).
## The following rules are provided as example.
# WG_PRE_UP_FIREWALL_RULES: |
#   iptables -P FORWARD DROP;
#   iptables -A FORWARD -i wg0 -d 10.8.0.0/24 -j ACCEPT;
#   iptables -t nat -A POSTROUTING -o eth0 -s 10.8.0.0/24 -j MASQUERADE;
#   iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 1234 -j DNAT --to-destination 10.8.0.2:1234;

## Add custom commands to run after the WireGuard is up (optional).
# WG_POST_UP:

## Custom firewall rules to apply before the WireGuard interface is brought down (optional).
## The following rules are provided as example.
# WG_PRE_DOWN_FIREWALL_RULES: |
#   iptables -D FORWARD -i wg0 -d 10.8.0.0/24 -j ACCEPT;
#   iptables -t nat -D POSTROUTING -o eth0 -s 10.8.0.0/24 -j MASQUERADE;
#   iptables -D PREROUTING -t nat -i eth0 -p tcp --dport 1234 -j DNAT --to-destination 10.8.0.2:1234;

## Add custom commands to run after the WireGuard is down (optional).
# WG_POST_DOWN:
