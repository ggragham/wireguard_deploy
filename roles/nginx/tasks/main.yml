---
- name: Install and config webserver
  block:
    - name: Ensure www-data user is present
      user:
        name: www-data
        uid: 33
        comment: www-data
        home: /var/www
        shell: /usr/sbin/nologin
        state: present
      become: true

    - name: Install nginx
      block:
        - name: Create Nginx directory struct
          file:
            path: '{{ directory }}'
            state: directory
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0755
          loop_control:
            loop_var: directory
          loop:
            - '{{ NGINX_LOG_PATH }}'
            - '{{ NGINX_DOCKER_PATH }}'
            - '{{ NGINX_DOCKER_CONF_PATH }}'
            - '{{ NGINX_SITES_ENABLED_PATH }}'
            - '{{ NGINX_SNIPPETS_PATH }}'

        - name: Create Nginx ssl directory
          file:
            path: '{{ NGINX_DOCKER_SSL_PATH }}'
            state: directory
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0500

        - name: Apply Nginx docker config
          copy:
            src: default.conf
            dest: '{{ NGINX_DOCKER_CONF_PATH }}/default.conf'
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0644

        - name: Apply Nginx Docker Compose template
          template:
            src: docker_compose.yml.j2
            dest: '{{ NGINX_DOCKER_PATH }}/docker-compose.yml'
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0644

      become: true

    - name: Copy existing certs
      block:
        - name: Copy ssl cert
          copy:
            src: '{{ SSL_CERT_PATH }}'
            dest: '{{ NGINX_SSL_CERT_PATH }}'
            owner: '{{ NGINX_USER }}'
            mode: 0400
          become: true

        - name: Copy ssl key
          copy:
            src: '{{ SSL_KEY_PATH }}'
            dest: '{{ NGINX_SSL_KEY_PATH }}'
            owner: '{{ NGINX_USER }}'
            mode: 0400
          become: true

        - name: Copy dh group
          copy:
            src: '{{ SSL_DH_PATH }}'
            dest: '{{ NGINX_SSL_DH_PATH }}'
            owner: '{{ NGINX_USER }}'
            mode: 0400
          become: true
      when: SSL_GEN == 'manual'

    - name: Gen dhparam.pem
      shell: openssl dhparam -out {{ SSL_DH_NAME }} {{ SSL_DH_KEY_SIZE }}
      args:
        chdir: '{{ NGINX_DOCKER_SSL_PATH }}'
      become: true
      when: SSL_GEN == 'auto'

    - name: Apply headers config
      template:
        src: headers.conf.j2
        dest: '{{ NGINX_SNIPPETS_PATH }}/headers.conf'
        mode: 0644
      become: true

    - name: Apply ssl config
      template:
        src: ssl-params.j2
        dest: '{{ NGINX_SNIPPETS_PATH }}/ssl-params.conf'
        mode: 0644
      become: true

    - name: Start Nginx
      shell: docker compose down && docker compose up -d
      args:
        chdir: '{{ NGINX_DOCKER_PATH }}'

  tags: nginx
